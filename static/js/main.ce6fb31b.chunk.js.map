{"version":3,"sources":["components/Header.jsx","hooks/api.hook.js","components/Footer.jsx","components/Spinners/Spinner.jsx","components/RecomendedCards/Card.jsx","components/RecomendedCards/RecomendedCards.jsx","components/StaticPages/About.jsx","components/StaticPages/Accommodation.jsx","components/StaticPages/Feedback.jsx","redux/types.js","redux/actions.js","components/Forms/UniversalForm.jsx","components/StaticPages/Rules.jsx","components/Catalog/Card.jsx","components/Catalog/Catalog.jsx","components/PostPage/Card.jsx","components/PostPage/CommentCards.jsx","components/PostPage/CommentForm.jsx","components/PostPage/PostPage.jsx","components/Search/Search.jsx","components/PostPage/Remove.jsx","components/Auth/Auth.jsx","components/Auth/Register.jsx","components/MainContent.jsx","components/Modal/Modal.jsx","App.jsx","redux/commentReducer.js","redux/modalReducer.js","redux/postsReducer.js","redux/rootReducer.js","redux/searchReducer.js","index.js"],"names":["Header","props","useState","searchStr","setSearchStr","className","href","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","onSubmit","e","preventDefault","placeholder","value","onChange","event","target","useAPI","loading","setLoading","error","setError","request","useCallback","url","a","method","body","headers","fetch","response","json","data","message","Footer","popularTags","setPopularTags","last","setLast","useEffect","res","map","tag","title","slice","Spinner","role","Card","posts","length","post","_id","RecomendedCard","reviews","useSelector","state","complaints","About","Accommodation","Feedback","LOAD_REVIEWS","LOAD_COMPLAINTS","NOTIFICATION","HIDE_NOTIFICATION","COMMENT_REPLY","DELETE_COMMENT_REPLY","SEARCH","fetchReviews","page","dispatch","JSON","stringify","payload","fetchComplaints","notification","content","deleteCommentReply","UniversalForm","useDispatch","isValid","setValid","organisation","address","email","phone","site","tags","formValues","setFormValues","popoversTags","setPopoversTags","validation","checkValidity","stopPropagation","isShow","handleChange","name","handleTagChange","Tags","trim","split","search","pop","console","log","setTagsVal","tgs","outerText","join","onClick","noValidate","htmlFor","required","autoComplete","class","popover","selected","disabled","Rules","Catalog","download","useInView","threshold","ref","inView","index","comment","useCookies","cookies","contentEditable","setContentEditable","saveComment","jwt","onBlur","autoFocus","to","spy","smooth","offset","duration","commentReply","style","cursor","CommentCards","postId","comments","setComments","graf","Map","comm","used","use","set","get","isUsed","dfs","replays","child","v","paddingLeft","CommentForm","replay","PostPage","postData","setPostData","redirect","setRedirect","deletPost","postUrl","match","params","Fragment","height","minHeight","display","WhatsappShareButton","WhatsappIcon","size","round","VKShareButton","VKIcon","FacebookShareButton","FacebookIcon","ViberShareButton","ViberIcon","TelegramShareButton","TelegramIcon","EmailShareButton","subject","EmailIcon","Search","query","catalog","setCatalog","i","concat","filteredList","Set","parse","Remove","reason","for","Auth","setCookie","login","password","token","path","Register","Boolean","MainContent","exact","component","Modal","modal","close","data-dismiss","aria-hidden","App","initialState","rootReducer","combineReducers","action","conc2","sconc2","conc","sconc","store","createStore","applyMiddleware","thunk","hydrate","CookiesProvider","document","getElementById"],"mappings":"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","file":"static/js/main.ce6fb31b.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst Header = props => {\r\n    const [ searchStr, setSearchStr ] = useState('');\r\n    return(\r\n        <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n            <a className=\"navbar-brand\" href=\"/\">Жалобы и отзывы</a>\r\n            <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                <span className=\"navbar-toggler-icon\"></span>\r\n            </button>\r\n\r\n            <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                <ul className=\"navbar-nav mr-auto\">\r\n                    <li className=\"nav-item\">\r\n                        <a className=\"nav-link\" href=\"/complaints\">Жалобы</a>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <a className=\"nav-link\" href=\"/reviews\">Отзывы</a>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <a className=\"nav-link\" href=\"/about\">Информация</a>\r\n                    </li>\r\n                </ul>\r\n                <form className=\"form-inline my-2 my-lg-0\" onSubmit={(e)=>{e.preventDefault();}}>\r\n                    <input className=\"form-control mr-sm-2\" type=\"search\" placeholder=\"Поиск\" aria-label=\"Поиск\" value={searchStr} onChange={event=>setSearchStr(event.target.value)}/>\r\n                    <a href={`/search/${searchStr}`} className=\"btn btn-outline-primary my-2 my-sm-0\">Найти</a>\r\n                </form>\r\n            </div>\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default Header;","import {useState, useCallback} from 'react';\r\n\r\nexport const useAPI = () => {\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState(null);\r\n\r\n    const request = useCallback(async ( url, method = 'GET', body = null, headers = {}) => {\r\n        setLoading(true);\r\n        try{\r\n            headers['Content-Type'] = 'application/json';\r\n            const response = await fetch(url, {\r\n                method,\r\n                body,\r\n                headers\r\n            });\r\n            const data = await response.json();\r\n            setLoading(false);\r\n            return data;\r\n        } catch(e){\r\n            setLoading(false);\r\n            setError(e.message);\r\n        }\r\n    }, []);\r\n    return { loading, error, request };\r\n}","import React, { useEffect, useState } from 'react';\r\nimport { useAPI } from '../hooks/api.hook';\r\n\r\nconst Footer = props => {\r\n    const [popularTags, setPopularTags] = useState([]);\r\n    const [ last, setLast ] = useState([]);\r\n    const { loading, request } = useAPI();\r\n    useEffect(async () =>{\r\n        const response = await request('/api/posts/get/popularTags', 'POST');\r\n        setPopularTags(response);\r\n        const res = await request('/api/posts/news', 'POST');\r\n        setLast(res);\r\n    }, []);\r\n    return(\r\n        <footer className=\"container py-5\">\r\n            <div className=\"row\">\r\n                <div className=\"col-6 col-md\">\r\n                    <h5>Главное</h5>\r\n                    <ul className=\"list-unstyled text-small\">\r\n                        <li><a className=\"text-muted\" href=\"/complaints\">Жалобы</a></li>\r\n                        <li><a className=\"text-muted\" href=\"/reviews\">Отзывы</a></li>\r\n                        <li><a className=\"text-muted\" href=\"/\">Добавить жалобу/отзыв</a></li>\r\n                    </ul>\r\n                </div>\r\n                <div className=\"col-6 col-md\">\r\n                    <h5>Популярные теги</h5>\r\n                    <ul className=\"list-unstyled text-small\">\r\n                        {popularTags.map(tag => <li><a className=\"text-muted\" href={`/search/${tag.tag}`}>{tag.tag}</a></li>)}\r\n                    </ul>\r\n                </div>\r\n                <div className=\"col-6 col-md\">\r\n                    <h5>Последние посты</h5>\r\n                    <ul className=\"list-unstyled text-small\">\r\n                        {last.map(tag => <li><a className=\"text-muted\" href={`/post/${tag.url}`}>{tag.title.slice(0,10)}...</a></li>)}\r\n                    </ul>\r\n                </div>\r\n                <div className=\"col-6 col-md\">\r\n                    <h5>Информация</h5>\r\n                    <ul className=\"list-unstyled text-small\">\r\n                        <li><a className=\"text-muted\" href=\"/about\">Главное</a></li>\r\n                        <li><a className=\"text-muted\" href=\"/accommodation\">Правила размещения</a></li>\r\n                        <li><a className=\"text-muted\" href=\"/rules\">Правила сайта</a></li>\r\n                        <li><a className=\"text-muted\" href=\"/feedback\">Плохой отзовик VS хороший</a></li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n            </footer>\r\n    );\r\n}\r\n\r\nexport default Footer;","import React from 'react'\r\n\r\nconst Spinner = () => {\r\n    return (\r\n        <div className=\"d-flex justify-content-center\">\r\n            <div className=\"spinner-border text-primary\" role=\"status\">\r\n                <span className=\"sr-only\">Loading...</span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Spinner;\r\n","import React from 'react'\r\nimport Spinner from '../Spinners/Spinner';\r\n\r\nconst Card = ({title, posts}) => {\r\n    return (\r\n        <div className=\"card mb-4\">\r\n          <div className=\"card-header\">\r\n            <h4 className=\"card-title text-center pt-2\">{title}</h4>\r\n          </div>\r\n          <ul className=\"list-group list-group-flush\">\r\n    { posts.length ? posts.map(post => <li className=\"list-group-item\" key={post._id}><a href={`/post/${post.url}`}>{post.title.slice(0, 100)}{post.title.length > 100 ? '...' : ''}</a></li>) : <Spinner />}\r\n          </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Card;\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport Card from './Card';\r\n\r\nconst RecomendedCard = () => {\r\n    const reviews = useSelector(state => state.posts.reviews);\r\n    const complaints = useSelector(state => state.posts.complaints);\r\n    return(\r\n    <div className=\"col\">\r\n        <Card title=\"Отзывы\" posts={reviews.data.slice(-5)}/>\r\n        <Card title=\"Жалобы\" posts={complaints.data.slice(-5)}/>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default RecomendedCard;","import React from 'react';\r\n\r\nconst About = props => {\r\n\r\n    return(\r\n        <div className=\"card h-100\">\r\n            <div className=\"card-header\">\r\n                <h2>Информация</h2>\r\n            </div>\r\n            <div className=\"card-body\">\r\n                <p className=\"lead\">\r\n                    <b className=\"h4\">vseotzivu.ru&nbsp;</b> является публичным источником информации в сети и не может нести ответственность за нанесенный ущерб.\r\n                    <br/> <br/>\r\n                    Все материалы на сайте оставляют посетители без указания каких-либо данных (e-mail, телефон, ip адрес), так что в дальнейшем, контактная информация не может быть предоставлена.\r\n                    <br/> <br/>\r\n                    Нашли ошибку, есть вопросы и предложения по работе сайта? → vseotzivitut@gmail.com\r\n                    <br/> <br/>\r\n                    Если не получается оставить отзыв - пишите на почту. В теме укажите заголовок, в теле письма текст отзыва. Мы обязательно разместим его на сайте, если он не нарушает <a href=\"/rules\">правил</a> сайта. Жалобы и отзывы в отличии от рекомендаций публикуются сразу, но могут быть удалены. Рекомендации проходят ручную модерацию, должны соответствовать <a href=\"/accommodation\">правилам</a> размещения и сразу опубликованы не будут.\r\n                    <br/> <br/>\r\n                    Верить отзовикам или нет, читайте <a href=\"/feedback\">здесь</a>. Помните - положительные отзывы могут оставлять владельцы организаций и сайтов, а негативную информацию или клевету - конкуренты. Относитесь к этому с пониманием и учитесь правильно конкурировать в сети. Рекомендуем оставить опровергающий комментарий с вашими контактами для связи и урегулирования вопроса.\r\n                </p>\r\n            </div>\r\n        </div>\r\n    ); \r\n}\r\n\r\nexport default About;  ","import React from 'react'\r\n\r\nconst Accommodation = () => {\r\n    return (\r\n        <div className=\"card h-100\">\r\n            <div className=\"card-header\">\r\n                <h2>Правила размещения рекомендаций</h2>\r\n            </div>\r\n            <div className=\"card-body\">\r\n                <p className=\"lead\">\r\n                    В раздел \"рекомендации\" публикуются существующие организации, которые имеют название \"ООО Имя Компании\", \"ОАО Название Организации\", \"ЗАО Жалобы Онлайн\" и др., юридический/почтовый адрес, ИНН, КПП, ОГРН, телефон, E-mail, сайт. Некоторую информацию, как емейл и сайт указывать не обязательно, но желательно. Обязательно в описании укажите род деятельности организации, как можно более подробно и полно. Это будет большим плюсом для выдачи поисковых систем. Отзывы из раздела \"рекомендации\" проходят премодерацию. Это значит, что администратор проверит информацию и только потом разместит ее на сайте.\r\n                </p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Accommodation;\r\n","import React from 'react'\r\n\r\nconst Feedback = () => {\r\n    return (\r\n        <div className=\"card h-100\">\r\n            <div className=\"card-header\">\r\n                <h2>Плохой отзовик VS хороший</h2>\r\n            </div>\r\n            <div className=\"card-body\">\r\n                <p className=\"lead\"><strong>FAQ</strong>. Верить или нет отзовикам? Как мошенники обманывают нас через отзовики?</p>\r\n                <p className=\"lead\">Сайт zhaloba-online создан для того, чтобы люди могли оставлять положительные или отрицательные отзывы, плюсы и минусы, жалобы, комментировать. Но сегодня похожие интернет ресурсы существую (и не долго) лишь для продвижения сайтов мошенников, мошеннических организаций и физ. лиц, ИП, занимающихся мошеннической деятельностью.</p>\r\n                <p className=\"lead\">Внесу ясность по типу мошенников: <strong>А-Б-В</strong></p>\r\n                <p className=\"lead\"><strong>а)</strong> <strong>Сайты мошенники</strong>. Их владельцев вы никогда не найдете, если вас обманули на деньги, и не сможете вернуть ущерб и наказать их, даже органы их не найдут. В 99% случаев поиски оканчиваются ничем (VPN, местонахождение в другой стране и тд, банально ваше заявление в полиции отложат и забудут). Сайты могут быть как однодневки, так и большие каталоги, где товары будут стоить дешевле чем в известных интернет магазинах на 15, 20, а то и 50 процентов. Важно: не переводите деньги на карту физ. лица, яндекс деньги или киви кошелек, если не уверены и проверяйте возраст домена через \"whois\", если сайт свежий, к нему доверие стремится к нулю.</p>\r\n                <p className=\"lead\"><strong>б)</strong> <strong>Мошеннические организации</strong>. <em>Вариант 1</em>: Регистрируется юридическое лицо на \"левого\" человека, самое простое \"ООО\" - Общество с Ограниченной Ответственностью. Левый человек - он же номинальный директор (формальный руководитель компании, не участвующий в процессе управления).&nbsp;<em>Вариант 2</em>: Покупается <a href=\"https://zhaloba-online.ru/kompaniya-odnodnevka-moshennik\">готовая ООО'шка</a> в даркнете вместе с расчетным счетом. Дальше создается сайт под фирму-однодневку, запускается реклама в интернете, показ объявлений через Яндекс/Гугл директ. Цены ставят обычно ниже рыночных процентов на 30, а то и больше. Мошенники также могут зарегистрироваться на сторонних площадках (tiu, metal100 т.д. т.п.), по типу куплю/продам оборудование, станки, сырье, в общем промышленные доски объявлений, где можно быть user-продавец или user-покупатель. User-продавец, он же мошенник, находит доверчивого user-покупателя и через переписку или по телефону сообщает, что есть нужная для вас позиция по очень низкой цене, но мы работаем только по предоплате (50-100%). Контрагент клюет на низкую стоимость и оплачивает счет. С печатью, с подписями, все как положено. А дальше люди, с которыми вы возможно общались по почте или телефону перестают выходить на связь, а деньги с расчетного счета выводятся через подставные фирмы или ИП. На одной ООО'шке мошенники могут зарабатывать миллионы, а честные предприниматели нести огромный убыток. Обратите внимание, если вы осуществляли перевод из одной страны в другую, то скорее всего мошенников не найдут. Важно: не платите на карту физ. лиц, Яндекс.Деньги, Qiwi кошелек и другие электронные средства оплаты, если не уверены в сделке.</p>\r\n                <p className=\"lead\"><strong>в)</strong> <strong>Физ. лица, ИП</strong>. Большинство из них дают объявления на авито, у них также могут быть сайты. В основном это черные риэлторы, <a href=\"https://zhaloba-online.ru/otzyvy/psevdo-brokery-moshenniki-kak-obmanyvayut.html\">псевдоброкеры</a>, колдуны, экстрасенсы, <a href=\"https://zhaloba-online.ru/otzyvy/yuristy-moshenniki-kak-rabotayut-i-kak-ne-popastsya.html\">мошенники-юристы</a>, мошенники по ремонту бытовой и эл. техники, мастера ремонтных и отделочных работ, частные детективы, помощь в оформлении кредита, загранпаспорта, визы и других документов. Совет, если не уверены - работайте с ними <strong>только</strong> по договору, в котором будут указаны паспортные данные обеих сторон, никаких удаленных переводов и предоплат на карты, яндекс деньги и киви кошельки.</p>\r\n                <p className=\"lead\"><strong>Плохие отзовики.</strong> Созданы специально мошенниками для публикации на них правильной, нужной им информации (в положительном ключе), накручивание рейтинга и повышение репутации сайта-мошенника, мошеннических юр. и физ. лиц. Вытеснение из первых строк поисковика достоверных, честных отзывов, с целью скрыть правду от пользователей, которые ищут, хотят приобрести тот или иной товар, оплатить определенную услугу.</p>\r\n                <p className=\"lead\"><strong>Хорошие отзовики</strong>. Тут все просто. Независимые сайты, на которых публикуется различная информация с некоторыми отличиями, касающимися публикации, модерации и оформления отзывов в целом. Но даже на хороших отзовиках мошенники продвигают свои товары и услуги. Касаемо организаций у них есть ИНН, КПП, ОГРН, расчетный счет. Используя эти данные вы можете поискать информацию в открытых источниках. Когда была зарегистрирована компания, суды, иски, уставной капитал, учредитель/руководитель/генеральный директор и другие данные, которые для вас могут оказаться полезными.</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Feedback;\r\n","export const LOAD_REVIEWS = 'LOAD_REVIEWS';\r\nexport const LOAD_COMPLAINTS = 'LOAD_COMPLAINTS';\r\n\r\nexport const NOTIFICATION = 'NOTIFICATION';\r\nexport const HIDE_NOTIFICATION = 'HIDE_NOTIFICATION';\r\n\r\n\r\nexport const COMMENT_REPLY = 'COMMENT_REPLY';\r\nexport const DELETE_COMMENT_REPLY = 'DELETE_COMMENT_REPLY';\r\n\r\n\r\nexport const SEARCH = 'SEARCH';","import { COMMENT_REPLY, DELETE_COMMENT_REPLY, HIDE_NOTIFICATION, LOAD_COMPLAINTS, LOAD_REVIEWS, NOTIFICATION, SEARCH } from \"./types\";\r\n\r\nexport function fetchReviews(page){\r\n    return async dispatch => {\r\n        const response = await fetch('/api/posts/get/reviews', {\r\n            headers:{\r\n                'Content-Type': 'application/json'\r\n            },\r\n            method: 'POST',\r\n            body: JSON.stringify({\r\n                page: page\r\n            })\r\n        });\r\n        const json = await response.json();\r\n        dispatch({ type: LOAD_REVIEWS, payload: json});\r\n    }\r\n}\r\nexport function fetchComplaints(page){\r\n    return async dispatch => {\r\n        const response = await fetch('/api/posts/get/complaints', {\r\n            headers:{\r\n                'Content-Type': 'application/json'\r\n            },\r\n            method: 'POST',\r\n            body: JSON.stringify({\r\n                page: page\r\n            })\r\n        });\r\n        const json = await response.json();\r\n        dispatch({ type: LOAD_COMPLAINTS, payload: json});\r\n    }\r\n}\r\nexport function notification(content){\r\n    return {\r\n        type: NOTIFICATION,\r\n        payload: content\r\n    }\r\n}\r\n\r\nexport function hideNotification(){\r\n    return {\r\n        type: HIDE_NOTIFICATION\r\n    }\r\n}\r\nexport function commentReply(comment){\r\n    return{\r\n        type: COMMENT_REPLY,\r\n        payload: comment\r\n    }\r\n}\r\nexport function deleteCommentReply(){\r\n    return{\r\n        type: DELETE_COMMENT_REPLY\r\n    }\r\n}\r\nexport function search(str){\r\n    return async dispatch => {\r\n        const response = await fetch('/api/posts/search',\r\n         'POST',\r\n          JSON.stringify({ search: str }));\r\n        const json = await response.json();\r\n        dispatch( { type: SEARCH, payload: json } );\r\n    }\r\n}","import React, { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { notification } from '../../redux/actions';\r\nimport { useAPI } from '../../hooks/api.hook';\r\n\r\nconst UniversalForm = () => {\r\n    const dispatch = useDispatch();\r\n    const { request } = useAPI();\r\n    const [isValid,setValid] = useState(false);\r\n    const [formValues, setFormValues] = useState({\r\n        title: '',\r\n        content: '',\r\n        organisation: '',\r\n        address: '',\r\n        email: '',\r\n        phone: '',\r\n        site: '',\r\n        tags: '',\r\n    });\r\n    const [popoversTags, setPopoversTags] = useState([]);\r\n    const validation = async (event) =>{\r\n        event.preventDefault();\r\n        if (event.target.checkValidity() === false) event.stopPropagation();\r\n        else{\r\n            dispatch(notification({isShow: true}));\r\n            const response = await request('/api/posts/create', 'POST', JSON.stringify(formValues));\r\n            dispatch(notification({\r\n                title: response.type === \"success\" ? 'Уведомление' : 'Ошибка',\r\n                content: response.message\r\n            }));\r\n        }\r\n        setValid(true);\r\n    }\r\n    const handleChange = event => {\r\n        setFormValues(formValues => ({\r\n            ...formValues,\r\n            [event.target.name]: event.target.value\r\n        })); \r\n    }\r\n    const handleTagChange = async event => {\r\n        setFormValues(formValues => ({\r\n            ...formValues,\r\n            [event.target.name]: event.target.value\r\n        }));\r\n        const Tags = event.target.value.trim().split(',')\r\n        const pop = await request(\r\n            '/api/posts/get/tags',\r\n            'POST', \r\n            JSON.stringify(\r\n                {\r\n                    search: Tags[Tags.length - 1].trim()\r\n                }\r\n            )\r\n        );\r\n        console.log(pop);\r\n        setPopoversTags(pop);\r\n    }\r\n    const setTagsVal = event => {\r\n        event.preventDefault();\r\n        setFormValues(formValues => {\r\n            let tgs = formValues.tags.trim().split(',');\r\n            tgs = tgs.map(tag => tag.trim());\r\n            tgs[tgs.length - 1] = event.target.outerText + ', ';\r\n            setPopoversTags([]);\r\n            return{\r\n                ...formValues,\r\n                tags:  tgs.join(', ')\r\n            }\r\n        });\r\n        console.log({event: event.target.outerText});\r\n    }\r\n    return(\r\n        <div className=\"card h-100\" onClick={()=>setPopoversTags([])}>\r\n            <div className=\"card-header\">\r\n                <h2>Добавить жалобу или отзыв</h2>\r\n            </div>\r\n            <div className=\"card-body\">\r\n                <form className={`needs-validation ${isValid ? \"was-validated\" : \"\"}`} noValidate onSubmit={validation}>\r\n                <div className=\"form-row mb-3\">\r\n                    <div className=\"col\">\r\n                        <label htmlFor=\"title\">Тема</label>\r\n                        <input type=\"text\" className=\"form-control\" id=\"title\" name=\"title\" required onChange={handleChange}/>\r\n                        <div className=\"invalid-feedback\">\r\n                            Это обязательное поле\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"form-row mb-3\">\r\n                    <div className=\"col\">\r\n                        <label htmlFor=\"content\">Жалоба, отзыв</label>\r\n                        <textarea type=\"text\" className=\"form-control\" id=\"content\" name=\"content\" required onChange={handleChange}></textarea>\r\n                        <div className=\"invalid-feedback\">\r\n                            Это обязательное поле\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"form-row mb-3\">\r\n                    <div className=\"col-md-6\">\r\n                        <label htmlFor=\"organisation\">Организация</label>\r\n                        <input type=\"text\" className=\"form-control\" id=\"organisation\" name=\"organisation\" required onChange={handleChange}/>\r\n                        <div className=\"invalid-feedback\">\r\n                            Это обязательное поле\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-md-6\">\r\n                        <label htmlFor=\"address\">Адрес</label>\r\n                        <input type=\"text\" className=\"form-control\" id=\"address\" name=\"address\" required onChange={handleChange}/>\r\n                        <div className=\"invalid-feedback\">\r\n                            Это обязательное поле\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"form-row\">\r\n                    <div className=\"col-md-6 mb-3\">\r\n                        <label htmlFor=\"email\">E-mail</label>\r\n                        <input type=\"text\" className=\"form-control\" id=\"email\" name=\"email\" required onChange={handleChange}/>\r\n                        <div className=\"invalid-feedback\">\r\n                            Некорректный e-mail\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-md-6 mb-3\">\r\n                        <label htmlFor=\"phone\">Телефон</label>\r\n                        <input type=\"text\" className=\"form-control\" id=\"phone\" name=\"phone\" required onChange={handleChange}/>\r\n                        <div className=\"invalid-feedback\">\r\n                            Обязательное поле\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"form-row\">\r\n                    <div className=\"col-md-6 mb-3\">\r\n                        <label htmlFor=\"site\">Сайт</label>\r\n                        <input type=\"text\" className=\"form-control\" id=\"site\" name=\"site\" required onChange={handleChange}/>\r\n                        <div className=\"invalid-feedback\">\r\n                            Please provide a valid city.\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-md-3 mb-3\">\r\n                        <label htmlFor=\"tags\">Теги</label>\r\n                        <input type=\"text\" className=\"form-control\" id=\"tags\" name=\"tags\" required onChange={handleTagChange} autoComplete=\"off\" value={formValues.tags} placeholder=\"Обман, мошенник, жалоба\"/>\r\n                        <div class={`dropdown-menu ${popoversTags.length ? 'show' : ''}`}>\r\n                            {popoversTags.map(popover => <a class=\"dropdown-item\" href=\"#\" onClick={setTagsVal}>{popover.tag}</a>)}\r\n                        </div>\r\n                        <div className=\"invalid-feedback\">\r\n                            Укажите ключевые слова, чтобы пользователям было проще найти ваш пост\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-md-3 mb-3\">\r\n                        <label htmlFor=\"category\">Категория</label>\r\n                        <select className=\"custom-select\" id=\"category\" name=\"category\" required onChange={handleChange}>\r\n                            <option selected disabled value=\"\">Выбрать...</option>\r\n                            <option>Жалоба</option>\r\n                            <option>Отзыв</option>\r\n                        </select>\r\n                        <div className=\"invalid-feedback\">\r\n                            Выберите категорию\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"form-group mt-2\">\r\n                    <div className=\"form-check\">\r\n                        <input className=\"form-check-input\" type=\"checkbox\" value=\"\" id=\"invalidCheck\" required/>\r\n                        <label className=\"form-check-label\" htmlFor=\"invalidCheck\">\r\n                            Я согласен с <a href=\"/rules\">правилами сайта</a>\r\n                        </label>\r\n                        <div className=\"invalid-feedback\">\r\n                            Вы должны согласиться с условиями, чтобы отправить форму\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <button type=\"submit\" className=\"btn btn-primary mt-2\">Отправить</button>\r\n            </form>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default UniversalForm;","import React from 'react'\r\n\r\nconst Rules = () => {\r\n    return (\r\n        <div className=\"card h-100\">\r\n            <div className=\"card-header\">\r\n                <h2>Правила</h2>\r\n            </div>\r\n            <div className=\"card-body\">\r\n                <p className=\"lead\">\r\n                <i>Добровольно-устное соглашение о том что:</i>\r\n                <br/>\r\n                <br/>\r\n                1. Я согласен, что сайт vseotzivu.ru не несет ответственность за опубликованную мною, как посетителем информацию, в том числе данные третьих лиц. В дальнейшем, если мне, как пользователю этого ресурса будут предъявлены претензии и обвинения, я не буду ссылаться на сайт vseotzivu.ru\r\n                <br/>\r\n                2. Я понимаю весь риск и ответственность за клевету и ложные сведения.\r\n                <br/>\r\n                3. Я знаю, что такое конституция РФ и УК РФ.\r\n                <br/>\r\n                4. Я помню, что незнание закона не освобождает от ответственности.\r\n                <br/>\r\n                5. Запрещается публикация:\r\n                <br/>\r\n                - статей и сайтов распространяющих незаконные вещества (химические), препараты (наркотики) на территории РФ;\r\n                <br/>\r\n                - текстов и картинок, которые могут быть использованы для розжига межнационального конфликта;\r\n                <br/>\r\n                - порнографического контента;\r\n                <br/>\r\n                6. Не рекомендуется размещать фото и контакты третьих лиц, в т.ч. и паспортные данные. Кроме случаев, если вы считаете, что физическое или юридическое лицо является 100% мошенником и у вас есть доказательства мошенничества (скриншоты переписки, номер заказа, договор).\r\n                </p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Rules\r\n","import React from 'react';\r\n\r\nconst Card = ({ post }) => {\r\n    return (\r\n        <div className=\"card mb-4\">\r\n            <div className=\"card-body\">\r\n                <h5 className=\"card-title\">{post.title}</h5>\r\n                <p className=\"card-text\">{post.content.slice(0,100)}</p>\r\n                <a href={`/post/${post.url}`} className=\"btn btn-primary\">Подробнее</a>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Card;\r\n","import React from 'react';\r\nimport { useInView } from 'react-intersection-observer';\r\nimport { useDispatch } from 'react-redux';\r\nimport Spinner from '../Spinners/Spinner';\r\nimport Card from './Card';\r\n\r\nconst Catalog = ({ posts, title, download }) => {\r\n    const dispatch = useDispatch();\r\n    const { ref, inView} = useInView({ threshold: 0 });\r\n    if(inView) dispatch(download());\r\n    return (\r\n        <div className=\"card\">\r\n            <div className=\"card-header\">\r\n                <h2>{title}</h2>\r\n            </div>\r\n            <div className=\"card-body\">\r\n                { posts.map( (post, index) => <Card post={post} key={index} /> ) }\r\n                <div ref={ref} />\r\n                { !posts.length ? <Spinner /> : ''}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Catalog;\r\n","import React, { useState } from 'react'\r\nimport { useDispatch } from 'react-redux';\r\nimport { commentReply } from '../../redux/actions';\r\nimport { Link } from 'react-scroll';\r\nimport { useCookies } from 'react-cookie';\r\nimport { useAPI } from '../../hooks/api.hook';\r\n\r\nconst Card = ({ comment }) => {\r\n    const [cookies, setCookie] = useCookies(['jwt']);\r\n    const [contentEditable, setContentEditable] = useState(false);\r\n    const { request } = useAPI();\r\n    const dispatch = useDispatch();\r\n    const setReply = event => {\r\n        dispatch(commentReply(comment));\r\n    }\r\n    const saveComment = async event => {\r\n        comment.content = event.target.value;\r\n        await request( '/api/posts/edit/comment', 'POST', JSON.stringify(comment) );\r\n        setContentEditable(false);\r\n    }\r\n    if(cookies.jwt && contentEditable) return(\r\n        <div className=\"card mb-3\">\r\n            <div className=\"card-body\">\r\n                <h5 className=\"card-title\">{comment.name}</h5>\r\n                <textarea onBlur={saveComment} className=\"w-100\" autoFocus>{comment.content}</textarea>\r\n            </div>\r\n        </div>\r\n    );\r\n    return (\r\n        <div className=\"card mb-3\">\r\n            <div className=\"card-body\">\r\n                <h5 className=\"card-title\">{comment.name}</h5>\r\n                <p className=\"card-text\" onClick={()=>setContentEditable(true)}>{comment.content}</p>\r\n                <Link className=\"card-link\" to=\"commentForm\" spy={true} smooth={true} offset={-20} duration={500} onClick={setReply} style={{ cursor: \"pointer\" }}>\r\n                    Ответить\r\n                </Link>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Card;\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useAPI } from '../../hooks/api.hook';\r\nimport Card from './Card';\r\nimport Spinner from '../Spinners/Spinner';\r\n\r\nconst CommentCards = ({ postId }) => {\r\n    const { loading, error,  request } = useAPI();\r\n    let [ comments, setComments ] = useState('');\r\n\r\n    useEffect(async ()=>{\r\n        const response = await request('/api/posts/comments', 'POST', JSON.stringify({ postId }));\r\n        let graf = new Map(response.map(comm => [comm._id, {...comm, used: false}]));\r\n        const use = id => graf.set(id, {...graf.get(id), used: true});\r\n        const isUsed = id => graf.get(id).used;\r\n        const dfs = id => {\r\n            use(id);\r\n            return(\r\n                <div className=\"pl-3\" key={id}>\r\n                    <Card comment={graf.get(id)}/>\r\n                    {graf.get(id).replays.map(child => (!isUsed(child)) ? dfs(child) : '')}\r\n                </div>\r\n            );\r\n        }\r\n        setComments([...graf].map(v => dfs(v[1]._id)));\r\n    }, [ postId ]);\r\n    if(loading) return <Spinner />\r\n    return (\r\n        <div className=\"card mt-4\">\r\n            <div className=\"card-body\" style={{paddingLeft: 0}}>\r\n                {comments}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CommentCards;\r\n","import React, { useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { deleteCommentReply, notification } from '../../redux/actions';\r\nimport { useAPI } from '../../hooks/api.hook';\r\n\r\nconst CommentForm = ({ post }) => {\r\n    const dispatch = useDispatch();\r\n    const replay = useSelector(state => state.comments.commentReply);\r\n    const [isValid,setValid] = useState(false);\r\n    const { request } = useAPI();\r\n    const [formValues, setFormValues] = useState({\r\n        name: '',\r\n        content: ''\r\n    });\r\n    const validation = async (event) =>{\r\n        event.preventDefault();\r\n        setValid(true);\r\n        if (event.target.checkValidity() === false) event.stopPropagation();\r\n        else{\r\n            dispatch(notification({isShow: true}));\r\n            const response = await request('/api/posts/add/comment', 'POST', JSON.stringify({ ...formValues, postId: post._id, replay: replay._id}));\r\n            dispatch(notification({\r\n                title: response.type === \"success\" ? 'Уведомление' : 'Ошибка',\r\n                content: response.message\r\n            }));\r\n            setValid(false);\r\n            setFormValues({\r\n                name: '',\r\n                content: ''\r\n            });\r\n            dispatch(deleteCommentReply());\r\n        }\r\n    }\r\n    const handleChange = event => {\r\n        setFormValues(formValues => ({\r\n            ...formValues,\r\n            [event.target.name]: event.target.value\r\n        })); \r\n    }\r\n    const closeAlert = event => {\r\n        event.preventDefault();\r\n        dispatch(deleteCommentReply());\r\n    }\r\n    return (\r\n        <div className=\"card mt-4\" name=\"commentForm\">\r\n            <h5 className=\"card-header\">Оставить комментарий</h5>\r\n            <div className=\"card-body\">\r\n            {\r\n                replay && (\r\n                    <div className=\"alert alert-primary alert-dismissible fade show\" role=\"alert\">\r\n                        <strong>Ответ на комментарий: </strong> \"{replay.content.slice(0, 20)}...\"\r\n                        <button type=\"button\" className=\"close\" onClick={closeAlert}>\r\n                            <span>&times;</span>\r\n                        </button>\r\n                    </div>)\r\n            }\r\n            <form className={`needs-validation ${isValid ? \"was-validated\" : \"\"}`} noValidate onSubmit={validation}>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"name\">Ваше имя</label>\r\n                    <input type=\"text\" className=\"form-control\" id=\"name\" name=\"name\" required onChange={ handleChange } value={formValues.name}/>\r\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Будет отображаться рядом с комментарием</small>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"content\">Комментарий</label>\r\n                    <textarea className=\"form-control\" id=\"content\" name=\"content\" required onChange={ handleChange } value={formValues.content}/>\r\n                </div>\r\n                <div className=\"form-group mt-2\">\r\n                    <div className=\"form-check\">\r\n                        <input className=\"form-check-input\" type=\"checkbox\" value=\"\" id=\"invalidCheck\" required />\r\n                        <label className=\"form-check-label\" htmlFor=\"invalidCheck\">\r\n                            Я согласен с <a href=\"/rules\">правилами сайта</a>\r\n                        </label>\r\n                        <div className=\"invalid-feedback\">\r\n                            Вы должны согласиться с условиями, чтобы отправить форму\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <button type=\"submit\" className=\"btn btn-primary mt-2\">Отправить</button>\r\n            </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CommentForm;\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useAPI } from '../../hooks/api.hook';\r\nimport Spinner from '../Spinners/Spinner';\r\nimport CommentCards from './CommentCards';\r\nimport CommentForm from './CommentForm';\r\nimport { useCookies } from 'react-cookie';\r\nimport { Redirect } from 'react-router';\r\nimport {\r\n    EmailShareButton,\r\n    FacebookShareButton,\r\n    HatenaShareButton,\r\n    InstapaperShareButton,\r\n    LineShareButton,\r\n    LinkedinShareButton,\r\n    LivejournalShareButton,\r\n    MailruShareButton,\r\n    OKShareButton,\r\n    PinterestShareButton,\r\n    PocketShareButton,\r\n    RedditShareButton,\r\n    TelegramShareButton,\r\n    TumblrShareButton,\r\n    TwitterShareButton,\r\n    ViberShareButton,\r\n    VKShareButton,\r\n    WhatsappShareButton,\r\n    WorkplaceShareButton\r\n  } from \"react-share\";\r\n  import {\r\n    EmailIcon,\r\n    FacebookIcon,\r\n    FacebookMessengerIcon,\r\n    HatenaIcon,\r\n    InstapaperIcon,\r\n    LineIcon,\r\n    LinkedinIcon,\r\n    LivejournalIcon,\r\n    MailruIcon,\r\n    OKIcon,\r\n    PinterestIcon,\r\n    PocketIcon,\r\n    RedditIcon,\r\n    TelegramIcon,\r\n    TumblrIcon,\r\n    TwitterIcon,\r\n    ViberIcon,\r\n    VKIcon,\r\n    WeiboIcon,\r\n    WhatsappIcon,\r\n    WorkplaceIcon\r\n  } from \"react-share\";\r\nconst PostPage = props => {\r\n    const [postData, setPostData] = useState({});\r\n    const { loading, request } = useAPI();\r\n    const [cookies, setCookie] = useCookies(['jwt']);\r\n    const [redirect, setRedirect] = useState('');\r\n    const deletPost = async event => {\r\n        if(cookies.jwt){\r\n            event.preventDefault();\r\n            await request('/api/posts/delete', 'POST', JSON.stringify(postData));\r\n            setRedirect('/');\r\n        }\r\n    }\r\n    const postUrl = props.match.params.url;\r\n    useEffect(async () => {\r\n        const response = await request('/api/posts/get/review-data', 'POST', JSON.stringify({ url: postUrl }));\r\n        setPostData(response);\r\n    }, [postUrl]);\r\n    if(redirect) return <Redirect to=\"/\"/>\r\n    if(loading) return <Spinner />\r\n    return (\r\n        <React.Fragment>\r\n            <div>\r\n                <div className=\"card\">\r\n                    <div className=\"card-header d-flex justify-content-between\">\r\n                        <h2>{postData.title}</h2>\r\n                        <a type=\"button\" class=\"btn btn-danger ml-2 d-flex align-items-center\" style={{height: \"45px\"}} href={`/remove/${postUrl}`} onClick={deletPost}>Удалить</a>\r\n                    </div>\r\n                    <div className=\"card-body lead\" style={{ minHeight: \"240px\" }}>\r\n                        {postData.content}\r\n                    </div>\r\n                    <ul className=\"list-group list-group-flush\">\r\n                        {postData.organisation ? <li className=\"list-group-item\">Организация - {postData.organisation}</li> : ''}\r\n                        {postData.address ? <li className=\"list-group-item\">Адрес - {postData.address}</li> : ''}\r\n                        {postData.phone ? <li className=\"list-group-item\">Телефон - {postData.phone}</li> : ''}\r\n                        {postData.email ? <li className=\"list-group-item\">E-mail - {postData.email}</li> : ''}\r\n                        {postData.site ? <li className=\"list-group-item\">Сайт - {postData.site}</li> : ''}\r\n                        {postData.tags ? <li className=\"list-group-item\">Теги - {postData.tags.split(', ').map(tag => <h5 style={{display: \"inline\"}}><a className=\"badge badge-primary mr-2\" href={`/search/${tag.trim()}`}>{tag.trim()}</a></h5>)}</li> : ''}\r\n                        {postData.site ? <li className=\"list-group-item\">\r\n                            <WhatsappShareButton url={`https://vseotzivu.ru/post/${postUrl}`} title={postData.title} className=\"mr-2\">\r\n                                <WhatsappIcon size={32} round={true} />\r\n                            </WhatsappShareButton>\r\n                            <VKShareButton url={`https://vseotzivu.ru/post/${postUrl}`} title={postData.title} className=\"mr-2\">\r\n                                <VKIcon size={32} round={true} />\r\n                            </VKShareButton>\r\n                            <FacebookShareButton url={`https://vseotzivu.ru/post/${postUrl}`} title={postData.title} className=\"mr-2\">\r\n                                <FacebookIcon size={32} round={true} />\r\n                            </FacebookShareButton>\r\n                            <ViberShareButton url={`https://vseotzivu.ru/post/${postUrl}`} className=\"mr-2\" title={postData.title}>\r\n                                <ViberIcon size={32} round={true} />\r\n                            </ViberShareButton>\r\n                            <TelegramShareButton url={`https://vseotzivu.ru/post/${postUrl}`} title={postData.title}  className=\"mr-2\">\r\n                                <TelegramIcon size={32} round={true} />\r\n                            </TelegramShareButton>\r\n                            <EmailShareButton url={`https://vseotzivu.ru/post/${postUrl}`} subject={postData.title}  className=\"mr-2\" body={postData.content}>\r\n                                <EmailIcon size={32} round={true} />\r\n                            </EmailShareButton>\r\n                        </li> : ''}\r\n                    </ul>\r\n                </div>\r\n                <CommentForm post={postData}/>\r\n            </div>\r\n            <CommentCards postId={postData._id}/>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default PostPage;","import React, { useEffect, useState } from 'react'\r\nimport { useAPI } from '../../hooks/api.hook';\r\nimport Catalog from '../Catalog/Catalog';\r\n\r\nconst Search = props => {\r\n    const query = props.match.params.query;\r\n    const [catalog, setCatalog] = useState([]);\r\n    const { loading, request } = useAPI();\r\n    useEffect(\r\n        async ()=>{\r\n            let posts = [];\r\n            const response = await request(\r\n                '/api/posts/get/tags',\r\n                'POST', \r\n                JSON.stringify(\r\n                    {\r\n                        search: query\r\n                    }\r\n                )\r\n            );\r\n            for(let i = 0; i < response.length; i++){\r\n                posts = posts.concat(response[i].posts);\r\n            }\r\n            let filteredList = [...new Set(posts.map(JSON.stringify))].map(JSON.parse);\r\n            setCatalog(filteredList);\r\n        },[query]\r\n    );\r\n    \r\n    return (\r\n        <div>\r\n            <Catalog posts={catalog} title={`Результаты по запросу: ${query}`} download={()=>({ type: '' })}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Search\r\n","import React, { useState } from 'react'\r\nimport { useDispatch } from 'react-redux';\r\nimport { notification } from '../../redux/actions';\r\nimport { useAPI } from '../../hooks/api.hook';\r\n\r\nconst Remove = (props) => {\r\n    const dispatch = useDispatch();\r\n    const { request } = useAPI();\r\n    const [isValid,setValid] = useState(false);\r\n    const [formValues, setFormValues] = useState({\r\n        url: props.match.params.url,\r\n        email: '',\r\n        reason: ''\r\n    });\r\n    const handleChange = event => {\r\n        setFormValues(formValues => ({\r\n            ...formValues,\r\n            [event.target.name]: event.target.value\r\n        })); \r\n    }\r\n    const validation = async (event) =>{\r\n        event.preventDefault();\r\n        if (event.target.checkValidity() === false) event.stopPropagation();\r\n        else{\r\n            dispatch(notification({isShow: true}));\r\n            const response = await request('/api/posts/remove', 'POST', JSON.stringify(formValues));\r\n            dispatch(notification({\r\n                title: response.type === \"success\" ? 'Уведомление' : 'Ошибка',\r\n                content: response.message\r\n            }));\r\n        }\r\n        setValid(true);\r\n    }\r\n    return (\r\n        <div className=\"card h-100\">\r\n            <div className=\"card-header\">\r\n                <h2>Удаление записи</h2>\r\n            </div>\r\n            <div className=\"card-body\">\r\n                <form className={`needs-validation ${isValid ? \"was-validated\" : \"\"}`} noValidate onSubmit={validation}>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"email\">Ваш E-mail</label>\r\n                        <input type=\"text\" className=\"form-control\" id=\"email\" name=\"email\" required onChange={handleChange}/>\r\n                        <div className=\"invalid-feedback\">\r\n                            Некорректный e-mail\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <label for=\"reason\">Причина удаления</label>\r\n                        <textarea type=\"text\" class=\"form-control\" id=\"reason\" name=\"reason\" onChange={handleChange} required style={{ height: \"340px\" }}/>\r\n                        <div className=\"invalid-feedback\">\r\n                            Обязательное поле\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"form-group mt-2\">\r\n                            <div className=\"form-check\">\r\n                                <input className=\"form-check-input\" type=\"checkbox\" value=\"\" id=\"invalidCheck\" required/>\r\n                                <label className=\"form-check-label\" htmlFor=\"invalidCheck\">\r\n                                    Я согласен с <a href=\"/rules\">правилами сайта</a>\r\n                                </label>\r\n                                <div className=\"invalid-feedback\">\r\n                                    Вы должны согласиться с условиями, чтобы отправить форму\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    <button type=\"submit\" class=\"btn btn-danger\">Удалить</button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Remove\r\n","import React, { useState } from 'react'\r\nimport { useAPI } from '../../hooks/api.hook';\r\nimport { useCookies } from 'react-cookie';\r\nimport { useDispatch } from 'react-redux';\r\nimport { notification } from '../../redux/actions';\r\nimport { Redirect } from 'react-router';\r\nconst Auth = () => {\r\n    const dispatch = useDispatch();\r\n    const { request } = useAPI();\r\n    const [isValid,setValid] = useState(false);\r\n    const [cookies, setCookie] = useCookies(['jwt']);\r\n    const [redirect, setRedirect] = useState('');\r\n    console.log(cookies.jwt);\r\n    const [formValues, setFormValues] = useState({\r\n        login: '',\r\n        password: ''\r\n    });\r\n    const handleChange = event => {\r\n        setFormValues(formValues => ({\r\n            ...formValues,\r\n            [event.target.name]: event.target.value\r\n        })); \r\n    }\r\n    const validation = async (event) =>{\r\n        event.preventDefault();\r\n        if (event.target.checkValidity() === false) event.stopPropagation();\r\n        else{\r\n            const response = await request('/api/auth/comein', 'POST', JSON.stringify(formValues));\r\n            if(response.type === \"error\"){\r\n                dispatch(notification({\r\n                    isShow: true,\r\n                    title: 'Ошибка',\r\n                    content: response.message\r\n                }));\r\n            }\r\n            else{\r\n                setCookie('jwt', response.token, { path: '/' });\r\n                setRedirect('/');\r\n            }\r\n            \r\n        }\r\n        setValid(true);\r\n    }\r\n    // if(redirect) return <Redirect to={redirect}/>\r\n    if(cookies.jwt){\r\n        return(\r\n        <div className=\"card\">\r\n            <div className=\"card-header\">\r\n                <h2>Панель администратора</h2>\r\n            </div>\r\n            <div className=\"card-body\">\r\n                <a href=\"/register\" className=\"btn btn-primary mr-2 mb-2\">Зарегистрировать администратора</a>\r\n                <button class=\"btn btn-danger mb-2\" onClick={()=>{console.log(cookies.jwt);setCookie('jwt', '', { path: '/' });console.log(cookies.jwt);}}>Выйти</button>\r\n            </div>\r\n        </div>\r\n        );\r\n    }\r\n    return (\r\n        <div className=\"card\">\r\n            <div className=\"card-header\">\r\n                <h2>Авторизация</h2>\r\n            </div>\r\n            <div className=\"card-body\">\r\n                <form className={`needs-validation ${isValid ? \"was-validated\" : \"\"}`} noValidate onSubmit={validation}>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"login\">Ваш E-mail</label>\r\n                        <input type=\"email\" className=\"form-control\" id=\"login\" name=\"login\" required onChange={handleChange} value={formValues.login} />\r\n                        <div className=\"invalid-feedback\">\r\n                            Некорректный e-mail\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <label for=\"password\">Пароль</label>\r\n                        <input type=\"password\" class=\"form-control\" id=\"password\" name=\"password\" onChange={handleChange} required value={formValues.password} />\r\n                        <div className=\"invalid-feedback\">\r\n                            Обязательное поле\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"form-group mt-2\">\r\n                        <div className=\"form-check\">\r\n                                <input className=\"form-check-input\" type=\"checkbox\" value=\"\" id=\"invalidCheck\" required/>\r\n                                <label className=\"form-check-label\" htmlFor=\"invalidCheck\">\r\n                                    Я согласен с <a href=\"/rules\">правилами сайта</a>\r\n                                </label>\r\n                                <div className=\"invalid-feedback\">\r\n                                    Вы должны согласиться с условиями, чтобы отправить форму\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    <button type=\"submit\" class=\"btn btn-primary\">Войти</button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Auth\r\n","import React, { useState } from 'react'\r\nimport { useAPI } from '../../hooks/api.hook';\r\nimport {Redirect} from 'react-router';\r\nimport { useCookies } from 'react-cookie';\r\nconst Register = (props) => {\r\n    const { request } = useAPI();\r\n    const [isValid,setValid] = useState(false);\r\n    const [ redirect, setRedirect ] = useState('');\r\n    const [cookies, setCookie] = useCookies(['jwt']);\r\n    const [formValues, setFormValues] = useState({\r\n        login: '',\r\n        password: ''\r\n    });\r\n    const handleChange = event => {\r\n        setFormValues(formValues => ({\r\n            ...formValues,\r\n            [event.target.name]: event.target.value\r\n        })); \r\n    }\r\n    const validation = async (event) =>{\r\n        event.preventDefault();\r\n        if (event.target.checkValidity() === false) event.stopPropagation();\r\n        else{\r\n            await request('/api/auth/register', 'POST', JSON.stringify(formValues));\r\n            setRedirect('/admin');\r\n        }\r\n        setValid(true);\r\n    }\r\n    if(!Boolean(cookies.jwt)) return <Redirect to=\"/\"/>\r\n    if(redirect) return <Redirect to=\"/admin\"/>\r\n    return (\r\n        <div className=\"card\">\r\n            <div className=\"card-header\">\r\n                <h2>Регистрация нового администратора</h2>\r\n            </div>\r\n            <div className=\"card-body\">\r\n                <form className={`needs-validation ${isValid ? \"was-validated\" : \"\"}`} noValidate onSubmit={validation}>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"login\">E-mail</label>\r\n                        <input type=\"email\" className=\"form-control\" id=\"login\" name=\"login\" required onChange={handleChange} value={formValues.login} />\r\n                        <div className=\"invalid-feedback\">\r\n                            Некорректный e-mail\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <label for=\"password\">Придумайте пароль</label>\r\n                        <input type=\"password\" class=\"form-control\" id=\"password\" name=\"password\" onChange={handleChange} required value={formValues.password} />\r\n                        <div className=\"invalid-feedback\">\r\n                            Обязательное поле\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"form-group mt-2\">\r\n                        <div className=\"form-check\">\r\n                                <input className=\"form-check-input\" type=\"checkbox\" value=\"\" id=\"invalidCheck\" required/>\r\n                                <label className=\"form-check-label\" htmlFor=\"invalidCheck\">\r\n                                    Я согласен с <a href=\"/rules\">правилами сайта</a>\r\n                                </label>\r\n                                <div className=\"invalid-feedback\">\r\n                                    Вы должны согласиться с условиями, чтобы отправить форму\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    <button type=\"submit\" class=\"btn btn-primary\">Зарегистрировать</button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Register\r\n","import React from 'react';\r\nimport {BrowserRouter, Route} from \"react-router-dom\";\r\nimport About from './StaticPages/About';\r\nimport Accommodation from './StaticPages/Accommodation';\r\nimport Feedback from './StaticPages/Feedback';\r\nimport UniversalForm from './Forms/UniversalForm';\r\nimport Rules from './StaticPages/Rules';\r\nimport { useSelector } from 'react-redux';\r\nimport Catalog from './Catalog/Catalog';\r\nimport { fetchComplaints, fetchReviews } from '../redux/actions';\r\nimport PostPage from './PostPage/PostPage';\r\nimport Search from './Search/Search';\r\nimport Remove from './PostPage/Remove';\r\nimport Auth from './Auth/Auth';\r\nimport Register from './Auth/Register';\r\nconst MainContent = () => {\r\n    const complaints = useSelector(state => state.posts.complaints);\r\n    const reviews = useSelector(state => state.posts.reviews);\r\n    return(\r\n        <div className=\"mb-4 col-xl-8\">\r\n            <BrowserRouter>\r\n                <Route exact path=\"/\">\r\n                    <UniversalForm />\r\n                </Route>\r\n                <Route exact path=\"/complaints\">\r\n                    <Catalog posts={complaints.data} title=\"Жалобы\" download={()=>fetchComplaints(complaints.page)}/>\r\n                </Route>\r\n                <Route exact path=\"/reviews\">\r\n                    <Catalog posts={reviews.data} title=\"Отзывы\" download={()=>fetchReviews(reviews.page)}/>\r\n                </Route>\r\n                <Route exact path=\"/post/:url\" component={PostPage} />\r\n                <Route exact path=\"/about\">\r\n                    <About />\r\n                </Route>\r\n                <Route exact path=\"/rules\">\r\n                    <Rules />\r\n                </Route>\r\n                <Route exact path=\"/accommodation\">\r\n                    <Accommodation />\r\n                </Route>\r\n                <Route exact path=\"/feedback\">\r\n                    <Feedback />\r\n                </Route>\r\n                <Route exact path=\"/admin\">\r\n                    <Auth />\r\n                </Route>\r\n                <Route exact path=\"/register\">\r\n                    <Register />\r\n                </Route>\r\n                <Route exact path=\"/search/:query\" component={Search}/>\r\n                <Route exact path=\"/remove/:url\" component={Remove}/>\r\n            </BrowserRouter>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MainContent;","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { hideNotification } from '../../redux/actions';\r\nimport Spinner from '../Spinners/Spinner';\r\nconst Modal = () => {\r\n    const modal = useSelector(state => state.modal);\r\n    const dispatch = useDispatch();\r\n    const close = () => dispatch(hideNotification());\r\n    return (\r\n        <React.Fragment>\r\n            <div className={`modal fade ${modal.isShow && \"show\"}`}>\r\n                <div className=\"modal-dialog modal-dialog-centered\">\r\n                    <div className=\"modal-content\">\r\n                    <div className=\"modal-header\">\r\n                        <h5 className=\"modal-title\">{modal.title}</h5>\r\n                        <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\" onClick={close}>\r\n                        <span aria-hidden=\"true\">&times;</span>\r\n                        </button>\r\n                    </div>\r\n                    <div className=\"modal-body\">\r\n                        {modal.content || <Spinner />}\r\n                    </div>\r\n                    <div className=\"modal-footer\">\r\n                        <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\" onClick={close}>Close</button>\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className={`modal-backdrop fade ${modal.isShow && \"show\"}`}></div>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default Modal;\r\n","import React, {useEffect} from 'react';\nimport { useDispatch } from 'react-redux';\nimport './App.css';\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport RecomendedCard from './components/RecomendedCards/RecomendedCards';\nimport MainContent from './components/MainContent';\nimport Modal from './components/Modal/Modal';\nimport { fetchComplaints, fetchReviews } from './redux/actions';\n\n\nfunction App() {\n  const dispatch = useDispatch();\n  useEffect(()=>{\n    dispatch(fetchComplaints());\n    dispatch(fetchReviews());\n  });\n\n  return (\n    <React.Fragment>\n      <Header />\n      <div className=\"container-fluid pt-3\">\n        <div className=\"row\">\n          <MainContent />\n          <RecomendedCard />\n        </div>\n      </div>\n      <Footer />\n      <Modal />\n    </React.Fragment>\n  );\n}\nexport default App;\n","import { COMMENT_REPLY, DELETE_COMMENT_REPLY } from \"./types\";\r\n\r\nconst initialState = {\r\n    commentReply: false\r\n};\r\n\r\nexport const commentReducer = (state = initialState, action) => {\r\n    switch(action.type){\r\n        case COMMENT_REPLY:\r\n            return { ...state, commentReply: action.payload }\r\n        case DELETE_COMMENT_REPLY:\r\n            return { ...state, commentReply: false }\r\n        default:\r\n            return state;\r\n    }\r\n}","import { HIDE_NOTIFICATION, NOTIFICATION } from './types';\r\n\r\nconst initialState = {\r\n    isShow: false,\r\n    title: '',\r\n    content: ''\r\n}\r\n\r\nexport const modalReducer = (state = initialState, action) => {\r\n    switch(action.type){\r\n        case NOTIFICATION:\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            }\r\n        case HIDE_NOTIFICATION:\r\n            return {\r\n                ...state,\r\n                isShow: false,\r\n                title: '',\r\n                content: ''\r\n\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","import { LOAD_COMPLAINTS, LOAD_REVIEWS } from './types';\r\nconst initialState = {\r\n    reviews: {\r\n        page: 1,\r\n        data: []\r\n    },\r\n    complaints: {\r\n        page: 1,\r\n        data: []\r\n    }\r\n}\r\n\r\nexport const postsReducer = (state = initialState, action) => {\r\n    switch(action.type){\r\n        case LOAD_REVIEWS:\r\n            let conc2 = state.reviews.data.concat(action.payload);\r\n            let sconc2 = [...new Set(conc2.map(JSON.stringify))].map(JSON.parse);\r\n            return {\r\n                ...state,\r\n                reviews: {\r\n                    page: state.reviews.page + 1,\r\n                    data: sconc2\r\n                }\r\n            };\r\n        case LOAD_COMPLAINTS:\r\n            let conc = state.complaints.data.concat(action.payload);\r\n            let sconc = [...new Set(conc.map(JSON.stringify))].map(JSON.parse);\r\n            return {\r\n                ...state,\r\n                complaints: {\r\n                    page: state.complaints.page + 1,\r\n                    data: sconc\r\n                }\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}","import { combineReducers } from \"redux\";\r\nimport { commentReducer } from \"./commentReducer\";\r\nimport { modalReducer } from \"./modalReducer\";\r\nimport { postsReducer } from \"./postsReducer\";\r\nimport { searchReducer } from \"./searchReducer\";\r\n\r\nexport const rootReducer = combineReducers({\r\n    posts: postsReducer,\r\n    modal: modalReducer,\r\n    comments: commentReducer,\r\n    searchStr: searchReducer\r\n});","import { SEARCH } from \"./types\";\r\n\r\nconst initialState = '';\r\n\r\nexport const searchReducer = (state = initialState, action) => {\r\n    switch(action.type){\r\n        case SEARCH:\r\n            return action.payload;\r\n        default:\r\n            return state;\r\n    }\r\n}","import React from 'react';\nimport { hydrate } from 'react-dom';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport { Provider } from 'react-redux';\nimport App from './App.jsx';\nimport { rootReducer } from './redux/rootReducer';\nimport { CookiesProvider } from 'react-cookie';\nconst store = createStore(\n  rootReducer, applyMiddleware(thunk)\n);\nhydrate(\n  <Provider store={store}>\n    <CookiesProvider>\n      <App />\n    </CookiesProvider>\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}